6387	david_cordes robert_allen	run a nsf reu program observation comment and suggestion	the department of computer science at the university of alabama in conjunction with the national science foundation lrb nsf rrb offer a research experience for undergraduate lrb reu rrb program during the summer of 1991 this paper discuss the administration structure organization and research effort associate with this program doi 101145 503720503725	ACM_Southeast_Regional_Conference	University_of_Alabama Tuscaloosa Alabama
202092	robert_allen remi_douence david_garlan	specify and analyze dynamic software architectures	a critical issue for complex componentbased system design be the modeling and analysis of architecture one of the complicating factor in develop architectural model be account for system whose architecture change dynamically lrb during run time rrb this be because dynamic change to architectural structure may interact in subtle way with ongoing computation of the system in this paper we argue that it be possible and valuable to provide a modeling approach that account for the interaction between architectural reconfiguration and nonreconfiguration system functionality while maintain a separation of concern between these two aspect of a system the key to the approach be to use a uniform notation and semantic base for both reconfiguration and steadystate behavior while at the same time provide syntactic separation between the two as we will show this permit we to view the architecture in term of a set of possible architectural snapshot each with its own steadystate behavior transition between these snapshot be account for by special reconfigurationtriggering event doi 101007 bfb0053581 true adl reconfiguration acme req	FASE	
361282	robert_j._allen david_garlan	formalize architectural connection	as software system become more c omplex the overall system structure lcb or software a r chitecture lcb b ecome a central design problem a i m p ortant step towards a engineering discipline of software i be a f o rmal basis for describe and analyze these design in this paper we present a theory for one aspect of architectural description the interaction between component the key idea be to deene architectural connector as explicit semantic entity these be s p ecied a s a c ollection of protocol that characterize each of the participant role in a interaction and how these role interact we illustrate how this scheme can be use to deene a variety of common architectural connector we provide a formal semantics and show how this lead to a sound deductive system in which architectural compatibility can be c h e cked i n a w a y a n a l ogous to type checking in programming language doi 101145 257734257745	ICSE	
362018	david_garlan robert_allen john_ockerbloom	architectural mismatch or why it be hard to build systems out of exist part	many would argue that future breakthrough in software productivity will depend on we ability to combine exist piece of software to produce new application a important step towards this goal be the development of new technique to detect and cope with mismatch in the assemble part some problem of composition be due to lowlevel issue of interoperability such as mismatch in programming language or database schema however in this paper we highlight a different and in many way more pervasive class of problem architectural mismatch specifically we use we experience in build a family of software design environment from exist part to illustrate a variety of type of mismatch that center around the assumption a reusable part make about the structure of the application in which be to appear base on this experience we show how a architectural view of the mismatch problem expose some fundamental thorny problem for software composition and suggest possible research avenue need to solve they doi 101145 225014225031 sys package architectural mismatch tem easy	ICSE	Carnegie_Mellon_University Pittsburgh PA
373151	robert_j._allen david_garlan	beyond definitionuse architectural interconnection	large software system require decompositional mechanism in order to make they tractable traditionally mil and idl have play this role by provide notation base on definitionuse binding in this paper we argue that current milidls base on definitionuse have some serious drawback a significant problem be that they fail to distinguish between implementation and interaction relationship between module we propose a alternative model in which component interact along welldefined line of communication or connector connectors be define as protocol that capture the expect pattern of communication between module we show how this lead to a scheme that be much more expressive for architectural relationship that allow the formal definition of module interaction and that support its own form of automate check and formal reasoning doi 101145 185084185101 software architecture acme rapide unicon	Workshop_on_Interface_Definition_Languages	
601053	gregory_d._abowd robert_allen david_garlan	use style to understand description of software architecture	the software architecture of most system be describe informally and diagrammatically in order for these description to be meaningful at all figure be understand by interpret the box and line in specific conventionalize way lsb 5 rsb the imprecision of these interpretation have a number of limitation in this paper we consider these conventionalize interpretation as architectural style and provide a formal framework for they uniform definition in addition to provide a template for precisely define new architectural style this framework allow for the proof that the notational constraint on a style be sufficient to guarantee the meaning of all describe system and provide a unified semantic base through which different stylistic interpretation can be compare doi 101145 256428167055 conformance architectural style connector software architecture csp	SIGSOFT_FSE	
601061	robert_allen david_garlan	formal modeling and analysis of the hla component integration standard	a increasingly important trend in the engineering of complex system be the design of component integration standard such standard define rule of interaction and share communication infrastructure that permit composition of system out of independentlydeveloped part a problem with these standard be that it be often difficult to understand exactly what they require and provide and to analyze they in order to understand they deeper property in this paper we use we experience in modeling the high level architecture lrb hla rrb for distribute simulation to show how one can capture the structured protocol inherent in a integration standard as a formal architectural model that can be analyze to detect anomaly race condition and deadlock doi 101145 288195288251 i n terface non determinism connector integration standard hla	SIGSOFT_FSE	
601089	david_garlan robert_allen john_ockerbloom	exploit style in architectural design environment	as the design of software architecture emerge as a discipline within software engineering it will become increasingly important to support architectural description and analysis with tool and environment in this paper we describe a system for develop architectural design environment that exploit architectural style to guide software architect in produce specific system the primary contribution of this research be lrb a rrb a generic object model for represent architectural design lrb b rrb the characterization of architectural style as specialization of this object model and lrb c rrb a toolkit for create a open architectural design environment from a description of a specific architectural style we use we experience in implement these concept to illustrate how styleoriented architectural design raise new challenge for software support environment doi 101145 193173195404 adl aesop sadl acme architectural	SIGSOFT_FSE	
666414	robert_allen steve_vestal dennis_cornhill bruce_lewis	use a architecture description language for quantitative analysis of realtime system	a architecture description language lrb adl rrb specify the structure of a overall system as a assembly of interact component adl can serve as input to a variety of development tool we outline the avionics architecture description language a emerge sae standard for describe the architecture of hard realtime safetycritical embedded computer system we describe a suite of tool that perform a set of verification modeling and analysis and implementation activity give a aadl specification we summarize a study that apply these technology use datum about a complex avionics system identify and discuss some of the issue raise by this exercise doi 101145 584369584399 adl aadl architecture description language	Workshop_on_Software_and_Performance	Boeing Seattle WA
759551	robert_allen david_smith	neurofuzzy closedloop control of depth of anaesthesia	the utility of the auditory evoke potential lrb aep rrb be under investigation as a feedback signal for the automatic closedloop control of general anaesthesia use neural network and fuzzy logic the aep be a signal derive from the electroencephalogram lrb eeg rrb in response to auditory stimulation which may be useful as a index of the depth of anaesthesia a simple backpropagation neural network can learn the aep and provide a satisfactory input to a fuzzy logic infusion controller for the administration of anaesthetic drug but the problem remain that of reliable signal acquisition doi 101016 s09333657 lrb 00 rrb 000841	Artificial_Intelligence_in_Medicine	
793283	robert_allen	the web interactive and multimedia education	the world wide web be become increasingly important in the provision of education as recognise by several high profile uk government report improve tool for develop webbased teaching and learn material together with focused training by individual institution and national programme have lead to a greater confidence in network technology by educator at many level higher education institution have be lead player in the uk in the development of innovative idea for exploit the educational potential of the web this paper present example of several technique in evidence in uk higher education which demonstrate some of the key innovation in teaching and learning focus on the theme of multimedia and interactivity some of the pedagogic and technology issue associate with these technique be identify and the way in which integration into the curriculum can be achieve be explore this integration take many aspect of the learning process into account from the delivery of information and reference through demonstration example and practice to learn by reflection and assessment in particular the way in which the web encourage the trend away from direct teaching and towards selfpaced and distance learning be investigate the web be show as support the learn process in many more way than its traditional information delivery role three main area explore be lrb 1 rrb virtual environment where reallife scenario be reconstruct to bridge the gap between theory and practice lrb 2 rrb interactive simulation which allow the investigation of change experimental condition without the cost and effort of laboratory equipment and lrb 3 rrb assessment which can provide valuable feedback to teacher and learner alike exploit both interactive and multimedia element to give add value to online educational material doi 101016 s01697552 lrb 98 rrb 002001 learning process multimedia tie teaching and learning	Computer_Networks	
793951	paul_england robert_b._allen ron_underwood	rave realtime services for the web		Computer_Networks	
1039031	luigi_cinque dean_yasuda linda_g._shapiro steven_l._tanimoto robert_allen	a improve algorithm for relational distance graph matching		Pattern_Recognition	
1070805	david_garlan robert_allen john_ockerbloom	architectural mismatch why reuse be so hard	this material be present to ensure timely dissemination of scholarly and technical work copyright and all rights therein be retain by author or by other copyright holder all person copy this information be expect to adhere to the term and constraint invoke by each author s copyright in most case these work may not be repost without the explicit permission of the copyright holder doi 101109 52469757 related approach drift architectural mismatch software component system architecture	IEEE_Software	Sch._of_Comput._Sci. Carnegie_Mellon_Univ. Pittsburgh PA
1115830	yalin_zheng mark_s._nixon robert_allen	automate segmentation of lumbar vertebra in digital videofluoroscopic image	low back pain be a significant problem in the industrialized world diagnosis of the underlie cause can be extremely difficult since mechanical factor often play a important role it can be helpful to study the motion of the spine digital videofluoroscopy have be develop for this study and it can provide image sequence with many frame but which often suffer due to noise exacerbate by the very low radiation dosage thus determine vertebra position within the image sequence present a considerable challenge there have be many study on vertebral image extraction but problem of repeatability occlusion and outofplane motion persist in this paper we show how the hough transform lrb ht rrb can be use to solve these problem here fourier descriptor be use to describe the vertebral body shape this description be incorporate within we ht algorithm from which we can obtain affine transform parameter ie scale rotation and center position the method have be apply to image of a calibration model and to image from two sequence of move human lumbar spine the result show promise and potential for object extraction from poor quality image and that model of spinal movement can indeed be derive for clinical application doi 101109 tmi 2003819927 vertebra fourier descriptor spine image sequence	IEEE_Trans._Med._Imaging	
1124189	robert_allen david_garlan	a formal basis for architectural connection	as software system become more complex the overall system structure 8212 or software architecture 8212 become a central design problem a important step toward a engineering discipline of software be a formal basis for describe and analyze these design in the article we present a formal approach to one aspect of architectural design the interaction among component the key idea be to define architectural connector as explicit semantic entity these be specify as a collection of protocol that characterize each of the participant role in a interaction and how these role interact we illustrate how this scheme can be use to define a variety of common architectural connector we further provide a formal semantics and show how this lead to a system in which architectural compatibility can be check in a way analogous to typechecking in programming language doi 101145 258077258078 check csp rapide software architecture connector ity formal compatibility glue	ACM_Trans._Softw._Eng._Methodol.	
1124191	robert_allen david_garlan	errata a formal basis for architectural connection	we present correction to a previously publish article which appear in italic acm transaction on software engineering and methodology italic 6 3 lrb july 1997 rrb pp 213 8211 249 doi 101145 287000287031	ACM_Trans._Softw._Eng._Methodol.	
1124637	robert_allen luigi_cinque steven_l._tanimoto linda_g._shapiro dean_yasuda	a parallel algorithm for graph matching and its maspar implementation	search of discrete space be important in combinatorial optimization such problem arise in artificial intelligence computer vision operation research and other area for realistic problem the search space to be process be usually huge necessitate long computation time pruning heuristic or massively parallel processing we present a algorithm that reduce the computation time for graph matching by employ both branchandbound pruning of the search tree and massivelyparallel search of the asyetunpruned portion of the space most research on parallel search have assume that a multipleinstructionstreammultipledatastream lrb mimd rrb parallel computer be available since massively parallel singleinstructionstreammultipledatastream lrb simd rrb computer be much less expensive than mimd system with equal number of processor the question arise as to whether simd system can efficiently handle statespace search problem we demonstrate that the answer be yes and in particular that graph matching have a natural and efficient implementation on simd machine doi 101109 71598276 permutation practical situation parallel processing graph match simd	IEEE_Trans._Parallel_Distrib._Syst.	Hewlett-Packard_Company Palo_Alto CA
1276997	shing_chun_benny_lam brendan_mccane robert_allen	automate tracking in digitized videofluoroscopy sequence for spine kinematic analysis		Image_Vision_Comput.	Institute_of_Sound_and_Vibration_Research University_of_Southampton Southampton_SO17_1BJ UK
1342563	david_garlan robert_allen john_ockerbloom	architectural mismatch why reuse be still so hard	in this article david garlan robert allen and john ockerbloom reflect on the state of architectural mismatch a term they coin in they 1995 ieee software article architectural mismatch why reuse be so hard although the nature of software system have change dramatically since the earlier article be publish the challenge of architectural mismatch remain a important concern for the software engineering field doi 101109 ms 200986 software reuse copyright holder exist solution architectural mismatch	IEEE_Software	IBM
1415167	robert_allen david_garlan	towards formalized software architectures	a important goal in software engineering be to describe complex software system at a architectural level of abstraction while there be many useful architectural paradigm lrb pipe blackboard etc rrb they be typically understand only idiomatically and apply in a ad hoc fashion we show how a formal model allow we to say precisely what we mean by a software architecture explore its property and systematically describe instance of the architecture we illustrate the approach use the wellknown example of pipefilter architecture formal model formal definition architectural level software engineering software architecture	null	
1416206	robert_allen david_garlan	a case study in architectural modelling the aegis system	software architecture be receive increasingly attention as a critical design level for software system however the current practice of architectural description be largely informal and ad hoc with the consequence that architectural document serve as a poor communication mechanism be difficult to analyze and may have very little relationship to the implement system in a attempt to address these problem several researcher have experiment with formalism for architectural specification and modelling one such formalism be wright in this paper we show how wright can be use to provide insight into a architectural design by model a prototype implementation of part of the aegis weapons system	Proceedings_of_the_8th_International_Workshop_on_Software_Specification_and_Design	Computer_Science_Department Carnegie_Mellon_University Pittsburgh PA
1426360	robert_allen david_garlan	formal connectors	as software system become more complex the overall system structure or software architecture become a central design problem a important step towards a engineering discipline of software be a formal basis for describe and analyze these design in this paper we present a theory for one aspect of architectural description the interaction between component the key idea be to define architectural connector as explicit semantic entity these be specify as a collection of protocol that characterize each of the participant role in a interaction and how these role interact we illustrate how this scheme can be use to define a variety of common architectural connector we further provide a formal semantics and show how this lead to a system in which architectural compatibility can be check in a way analogous to type checking in programming language	null	
1503954	robert_allen	write device driver with turbo c	operate system be a example of a subject that give the right tool can be teach in a practical manner allow student to understand and hence appreciate the internal workings of commercial operating system such as vms unix or vm not surprisingly the tool need in a operating system course be at a minimum a hardware testb and a programming language into which algorithm can be translate this paper describe how many of the salient point concern operate system can be cover in a practical manner use the pc and turbo c doi 101145 134510134547 operating systems practical manner turbo c	MS-DOS_system_programming_(2nd_ed.)	
